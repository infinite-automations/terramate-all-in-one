name: "Test & Release"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  test-simple:
    name: Test Simple
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Test
        uses: "./"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  test-pull-request:
    name: Test Pull Request
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    needs:
      - test-simple
    if: ${{ github.event_name == 'pull_request' }}
    strategy:
      matrix:
        terramate-args: ["--changed", ""]
        comment-pull-request: ["true", "false"]
      fail-fast: true
      max-parallel: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Test
        uses: "./"
        with:
          terramate-args: ${{ matrix.terramate-args }}
          comment-pull-request: ${{ matrix.comment-pull-request }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  test-setup:
    name: Test Setup
    runs-on: ubuntu-latest
    needs:
      - test-simple
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    strategy:
      matrix:
        terramate-version: ["0.4.2", "latest"]
        terraform-version: ["1.5.7", "latest"]
        terraform-plan-file: ["out.tfplan", "plan.out"]
        tmp-file: ["tmp.txt", "file.tmp"]
        cleanup: ["true", "false"]
      fail-fast: true
      max-parallel: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Test
        uses: "./"
        with:
          terramate-version: ${{ matrix.terramate-version }}
          terraform-version: ${{ matrix.terraform-version }}
          terraform-plan-file: ${{ matrix.terraform-plan-file }}
          temp-file: ${{ matrix.tmp-file }}
          cleanup: ${{ matrix.cleanup }}
          comment-pull-request: false

  test-jobs:
    name: Test Jobs
    runs-on: ubuntu-latest
    needs:
      - test-setup
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    strategy:
      matrix:
        lint: ["true", "false"]
        generate: ["true", "false"]
        validate: ["true", "false"]
        plan: ["true", "false"]
        apply: ["true", "false"]
        destroy: ["true", "false"]
      fail-fast: true
      max-parallel: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Test With Setup And Init
        uses: "./"
        with:
          lint: ${{ matrix.lint }}
          validate: ${{ matrix.validate }}
          plan: ${{ matrix.plan }}
          apply: ${{ matrix.apply }}
          destroy: ${{ matrix.destroy }}
          comment-pull-request: false
      - name: Test With Init Only
        uses: "./"
        with:
          setup: false
          init: true
          lint: ${{ matrix.lint }}
          validate: ${{ matrix.validate }}
          plan: ${{ matrix.plan }}
          apply: ${{ matrix.apply }}
          destroy: ${{ matrix.destroy }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-pull-request: false
      - name: Test Without Setup And Init
        uses: "./"
        with:
          setup: false
          init: false
          lint: ${{ matrix.lint }}
          validate: ${{ matrix.validate }}
          plan: ${{ matrix.plan }}
          apply: ${{ matrix.apply }}
          destroy: ${{ matrix.destroy }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-pull-request: false

  test-terraform-args:
    name: Test Terraform Arguments
    runs-on: ubuntu-latest
    needs:
      - test-jobs
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    strategy:
      matrix:
        terraform-common-args: ["-no-color", ""]
        terraform-init-args: ["-upgrade", ""]
        terraform-validate-args: ["-json", ""]
        terraform-plan-args: ["-parallelism=3", ""]
        terraform-show-args: ["-no-color", ""]
        terraform-apply-args: ["-parallelism=2", ""]
        terraform-destroy-args: ["-compact-warnings", ""]
      fail-fast: true
      max-parallel: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Test
        uses: "./"
        with:
          terraform-common-args: ${{ matrix.terraform-common-args }}
          terraform-init-args: ${{ matrix.terraform-init-args }}
          terraform-validate-args: ${{ matrix.terraform-validate-args }}
          terraform-plan-args: ${{ matrix.terraform-plan-args }}
          terraform-show-args: ${{ matrix.terraform-plan-args }}
          terraform-apply-args: ${{ matrix.terraform-apply-args }}
          terraform-destroy-args: ${{ matrix.terraform-destroy-args }}
          apply: true
          destroy: true
          comment-pull-request: false

  test-terramate-args:
    name: Test Terramate Arguments
    runs-on: ubuntu-latest
    needs:
      - test-terraform-args
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    strategy:
      matrix:
        terramate-args: ["--changed", ""]
        terramate-plan-args: ["--quiet", ""]
        terramate-apply-args: ["--quiet", ""]
        terramate-destroy-args: ["--reverse", ""]
      fail-fast: true
      max-parallel: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Test
        uses: "./"
        with:
          terramate-args: ${{ matrix.terramate-args }}
          terrmate-plan-args: ${{ matrix.terramate-plan-args }}
          terramate-apply-args: ${{ matrix.terramate-apply-args }}
          terramate-destroy-args: ${{ matrix.terramate-destroy-args }}
          apply: true
          destroy: true
          comment-pull-request: false

  release:
    name: Release
    needs:
      - test-terraform-args
      - test-terramate-args
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Get GitHub App Token
        id: get_token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        with:
          app-id: ${{ secrets.APP_ID_SEMREL }}
          private-key: ${{ secrets.APP_KEY_SEMREL }}

      - name: Create Release
        uses: cycjimmy/semantic-release-action@9cc899c47e6841430bbaedb43de1560a568dfd16 # v5.0.0
        env:
          GITHUB_TOKEN: ${{ steps.get_token.outputs.token }}
        with:
          dry-run: ${{ github.event_name != 'push' }}
          extra_plugins: |
            semantic-release-major-tag
            semantic-release-replace-plugin
